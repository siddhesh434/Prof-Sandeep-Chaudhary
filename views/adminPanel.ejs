<!DOCTYPE html>
<html lang="en" data-theme="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Panel</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <link rel="stylesheet" href="styles.css" />
    <style>
      /* Admin Panel Specific Styles are already included in your CSS */
      .admin-panel {
        padding: 30px;
        background-color: var(--secondary-bg);
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        margin: 20px 0;
      }

      .admin-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        border-bottom: 2px solid var(--border-color);
        padding-bottom: 15px;
      }

      .admin-title h1 {
        font-size: 1.8rem;
        color: var(--primary-color);
      }

      .admin-user {
        display: flex;
        align-items: center;
        gap: 10px;
      }

      .admin-user img {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        object-fit: cover;
        border: 2px solid var(--primary-color);
      }

      .admin-content {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 25px;
      }

      .admin-card {
        background-color: var(--card-bg);
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
      }

      .admin-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 15px rgba(0, 0, 0, 0.15);
      }

      .admin-card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
      }

      .admin-card-icon {
        width: 50px;
        height: 50px;
        background-color: var(--primary-color);
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 10px;
        font-size: 24px;
        color: white;
      }

      .admin-card-title {
        font-weight: 600;
        font-size: 1.2rem;
        margin-top: 15px;
        margin-bottom: 10px;
      }

      .admin-card-desc {
        color: var(--text-color);
        opacity: 0.7;
        font-size: 0.9rem;
        margin-bottom: 15px;
      }

      .admin-btn {
        display: inline-block;
        background-color: var(--primary-color);
        color: white;
        padding: 8px 15px;
        border-radius: 5px;
        text-decoration: none;
        font-weight: 500;
        font-size: 0.9rem;
        transition: background-color 0.3s ease, transform 0.2s ease;
        border: none;
        cursor: pointer;
        text-align: center;
      }

      .admin-btn:hover {
        background-color: var(--primary-color);
        filter: brightness(1.1);
        transform: translateY(-2px);
      }

      .admin-btn-outline {
        background-color: transparent;
        border: 1px solid var(--primary-color);
        color: var(--primary-color);
      }

      .admin-btn-outline:hover {
        background-color: var(--primary-color);
        color: white;
      }

      .admin-stats {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
      }

      .stat-card {
        background-color: var(--card-bg);
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
        text-align: center;
      }

      .stat-value {
        font-size: 2rem;
        font-weight: 700;
        color: var(--primary-color);
        margin-bottom: 5px;
      }

      .stat-label {
        font-size: 0.9rem;
        color: var(--text-color);
        opacity: 0.7;
      }

      .admin-actions {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 20px;
        margin-top: 30px;
      }

      /* For mobile responsiveness */
      @media (max-width: 768px) {
        .admin-header {
          flex-direction: column;
          align-items: flex-start;
          gap: 15px;
        }

        .admin-stats,
        .admin-content,
        .admin-actions {
          grid-template-columns: 1fr;
        }

        .admin-panel {
          padding: 20px 15px;
        }
      }
      /* Add loading indicator styles */
      .loading {
        position: relative;
        min-height: 60px;
      }

      .loading::after {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        width: 30px;
        height: 30px;
        margin-top: -15px;
        margin-left: -15px;
        border: 3px solid var(--primary-color);
        border-top-color: transparent;
        border-radius: 50%;
        animation: spin 1s linear infinite;
      }

      @keyframes spin {
        to {
          transform: rotate(360deg);
        }
      }

      .empty-state {
        text-align: center;
        padding: 20px;
        color: var(--text-color);
        opacity: 0.7;
      }

      .error-message {
        color: #ff6b6b;
        text-align: center;
        padding: 10px;
      }

      /* Animation for cards */
      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .fade-in {
        animation: fadeIn 0.5s ease forwards;
      }
    </style>
  </head>
  <body>
    <!-- Header is already implemented -->
    <header>
      <div class="container">
        <nav>
          <div class="nav-links">
            <a href="index.html">Home</a>
            <a href="publication.html">Publication</a>
            <a href="teaching.html">Teaching</a>
            <a href="researchGroup.html">Research Groups</a>
            <a href="#">Extension Activities</a>
            <a href="#">Upcoming Events</a>
            <a href="#">Collaboration Opportunities</a>
            <a href="#">Contact Details</a>
          </div>
          <div class="nav-icons">
            <a href="#"><i class="fas fa-search"></i></a>
            <label class="theme-switch">
              <input type="checkbox" id="theme-toggle" checked />
              <span class="slider">
                <i class="fas fa-sun sun-icon icon"></i>
                <i class="fas fa-moon moon-icon icon"></i>
              </span>
            </label>
          </div>
        </nav>
      </div>
    </header>
    <div class="container">
      <div class="main-wrapper">
        <div class="admin-panel">
          <div class="admin-header">
            <div class="admin-title">
              <h1>Admin Dashboard</h1>
              <p>Welcome back, Administrator</p>
            </div>
            <div class="admin-user">
              <div>
                <p>Admin User</p>
                <p style="font-size: 0.8rem; opacity: 0.7">Administrator</p>
              </div>
              <img
                src="https://cdn-icons-png.flaticon.com/512/324/324125.png"
                alt="Admin user"
              />
            </div>
          </div>

          <div class="admin-stats loading" id="statsContainer">
            <!-- Stats cards will be inserted here dynamically -->
          </div>

          <h2>Quick Actions</h2>
          <div class="admin-content">
            <div class="admin-card">
              <div class="admin-card-header">
                <div class="admin-card-icon">
                  <i class="fas fa-book"></i>
                </div>
              </div>
              <div class="admin-card-title">Books Management</div>
              <div class="admin-card-desc">
                Add, edit or remove books from the database.
              </div>
              <a href="add-books" class="admin-btn">Add New Book</a>
            </div>

            <div class="admin-card">
              <div class="admin-card-header">
                <div class="admin-card-icon">
                  <i class="fas fa-users"></i>
                </div>
              </div>
              <div class="admin-card-title">Conference Management</div>
              <div class="admin-card-desc">
                Manage conference details and schedules.
              </div>
              <a href="add-conference" class="admin-btn">Add New Conference</a>
            </div>

            <div class="admin-card">
              <div class="admin-card-header">
                <div class="admin-card-icon">
                  <i class="fas fa-newspaper"></i>
                </div>
              </div>
              <div class="admin-card-title">Publication Management</div>
              <div class="admin-card-desc">
                Add or edit publications and research papers.
              </div>
              <a href="add-publication" class="admin-btn"
                >Add New Publication</a
              >
            </div>

            <div class="admin-card">
              <div class="admin-card-header">
                <div class="admin-card-icon">
                  <i class="fas fa-cog"></i>
                </div>
              </div>
              <div class="admin-card-title">Settings</div>
              <div class="admin-card-desc">
                Configure system settings and preferences.
              </div>
              <a href="#" class="admin-btn admin-btn-outline">Configure</a>
            </div>
          </div>

          <h2 style="margin-top: 30px">Recent Activity</h2>
          <div class="admin-actions loading" id="activityContainer">
            <!-- Recent activity will be inserted here dynamically -->
          </div>
        </div>
      </div>
    </div>

    <!-- Footer is already implemented -->
    <footer>
      <div class="container">
        <div class="footer-content">
          <div class="footer-column">
            <h3>Quick Links</h3>
            <ul class="footer-links">
              <li><a href="#">Home</a></li>
              <li><a href="#">Skills</a></li>
              <li><a href="#">Projects</a></li>
              <li><a href="#">Publications</a></li>
              <li><a href="#">CV</a></li>
            </ul>
          </div>
          <div class="footer-column">
            <h3>Research</h3>
            <ul class="footer-links">
              <li><a href="#">Publications</a></li>
              <li><a href="#">Presentations</a></li>
              <li><a href="#">Open Source Projects</a></li>
              <li><a href="#">Research Data</a></li>
            </ul>
          </div>
          <div class="footer-column">
            <h3>Contact</h3>
            <div class="contact-info">
              <p>
                <i class="fas fa-envelope"></i> nikoloz.sirmpilatze@ucl.ac.uk
              </p>
              <p>
                <i class="fas fa-map-marker-alt"></i> Sainsbury Wellcome Centre,
                London
              </p>
              <p><i class="fas fa-phone"></i> +44 (0) 20 XXXX XXXX</p>
            </div>
            <div class="footer-social">
              <a href="#"><i class="fab fa-twitter"></i></a>
              <a href="#"><i class="fab fa-github"></i></a>
              <a href="#"><i class="fab fa-linkedin-in"></i></a>
              <a href="#"><i class="fab fa-google"></i></a>
            </div>
          </div>
        </div>
        <div class="copyright">
          <p>&copy; 2025 Nikoloz Sirmpilatze. All rights reserved.</p>
        </div>
      </div>
    </footer>
    <script>
      // Theme toggle functionality
      const themeToggle = document.querySelector("#theme-toggle");

      if (themeToggle) {
        themeToggle.addEventListener("change", () => {
          document.documentElement.setAttribute(
            "data-theme",
            themeToggle.checked ? "dark" : "light"
          );
        });
      }

      // Fetch data from MongoDB through the API
      document.addEventListener("DOMContentLoaded", async () => {
        try {
          // Fetch counts
          const statsContainer = document.getElementById("statsContainer");
          const countsResponse = await fetch("/api/counts");

          if (!countsResponse.ok) {
            throw new Error("Failed to fetch counts");
          }

          const counts = await countsResponse.json();

          // Remove loading state
          statsContainer.classList.remove("loading");

          // Create stats cards
          statsContainer.innerHTML = `
            <div class="stat-card fade-in" style="animation-delay: 0s">
              <div class="stat-value">${counts.books}</div>
              <div class="stat-label">Books</div>
            </div>
            <div class="stat-card fade-in" style="animation-delay: 0.1s">
              <div class="stat-value">${counts.conferences}</div>
              <div class="stat-label">Conferences</div>
            </div>
            <div class="stat-card fade-in" style="animation-delay: 0.2s">
              <div class="stat-value">${counts.publications}</div>
              <div class="stat-label">Publications</div>
            </div>
            <div class="stat-card fade-in" style="animation-delay: 0.3s">
              <div class="stat-value">${counts.total}</div>
              <div class="stat-label">Total Entries</div>
            </div>
          `;

          // Fetch recent activity
          const activityContainer =
            document.getElementById("activityContainer");
          const activityResponse = await fetch("/api/recent-activity");

          if (!activityResponse.ok) {
            throw new Error("Failed to fetch activity");
          }

          const activities = await activityResponse.json();

          // Remove loading state
          activityContainer.classList.remove("loading");

          if (activities.length === 0) {
            activityContainer.innerHTML = `
              <div class="empty-state">
                <i class="fas fa-info-circle"></i>
                <p>No recent activity found</p>
              </div>
            `;
            return;
          }

          // Format date function
          const formatDate = (dateString) => {
            const date = new Date(dateString);
            return `${date.toLocaleDateString()} - ${date.toLocaleTimeString(
              [],
              { hour: "2-digit", minute: "2-digit" }
            )}`;
          };

          // Create activity cards
          activityContainer.innerHTML = activities
            .map((activity, index) => {
              let icon = "fa-bell";
              let action = "Updated";

              if (activity.type === "book") icon = "fa-book";
              if (activity.type === "conference") icon = "fa-users";
              if (activity.type === "publication") icon = "fa-newspaper";

              return `
              <div class="admin-card fade-in" style="animation-delay: ${
                index * 0.1
              }s">
                <div class="admin-card-header">
                  <div class="admin-card-icon" style="width: 30px; height: 30px; font-size: 14px;">
                    <i class="fas ${icon}"></i>
                  </div>
                </div>
                <div class="admin-card-title">${
                  activity.type.charAt(0).toUpperCase() + activity.type.slice(1)
                } Added</div>
                <div class="admin-card-desc">${activity.title}</div>
                <div style="font-size: 0.8rem; color: var(--text-color); opacity: 0.6;">
                  ${formatDate(activity.timestamp)}
                </div>
              </div>
            `;
            })
            .join("");
        } catch (error) {
          console.error("Error:", error);

          // Handle errors in the stats container
          const statsContainer = document.getElementById("statsContainer");
          statsContainer.classList.remove("loading");
          statsContainer.innerHTML = `
            <div class="error-message">
              <i class="fas fa-exclamation-triangle"></i>
              <p>Failed to load statistics. Please try again later.</p>
            </div>
          `;

          // Handle errors in the activity container
          const activityContainer =
            document.getElementById("activityContainer");
          activityContainer.classList.remove("loading");
          activityContainer.innerHTML = `
            <div class="error-message">
              <i class="fas fa-exclamation-triangle"></i>
              <p>Failed to load recent activity. Please try again later.</p>
            </div>
          `;
        }
      });
    </script>
  </body>
</html>
