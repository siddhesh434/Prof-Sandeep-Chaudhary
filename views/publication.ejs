<%- include('partials/header') %>
   <link rel="stylesheet" href="publication.css">
   <style>
    /* Publication summary */
    .publication-summary {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      margin-bottom: 30px;
    }
    .summary-card {
      flex: 1;
      min-width: 250px;
      background-color: var(--card-bg);
      border-radius: 10px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
      padding: 20px;
      text-align: center;
    }
    .summary-number {
      font-size: 2.5rem;
      font-weight: bold;
      color: var(--primary-color);
      margin-bottom: 10px;
    }
    .summary-title {
      font-size: 1.1rem;
      color: var(--text-color);
    }
    @media (max-width: 768px) {
      .summary-card {
        min-width: 100%;
      }
    }
    /* Search and pagination styles */
    .table-controls {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }
    .search-container {
      display: flex;
      align-items: center;
    }
    .search-input {
      padding: 8px 12px;
      border: 1px solid var(--border-color);
      border-radius: 5px 0 0 5px;
      background-color: var(--secondary-bg);
      color: var(--text-color);
      width: 250px;
    }
    .search-button {
      padding: 8px 12px;
      background-color: var(--primary-color);
      color: white;
      border: none;
      border-radius: 0 5px 5px 0;
      cursor: pointer;
    }
    .pagination-container {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 20px;
      padding: 10px;
      background-color: var(--card-bg);
      border-radius: 5px;
    }
    .pagination-info {
      color: var(--text-color);
      font-size: 0.9rem;
    }
    .pagination-controls {
      display: flex;
      gap: 5px;
    }
    .pagination-controls button {
      padding: 5px 10px;
      background-color: var(--pagination-bg);
      color: var(--text-color);
      border: 1px solid var(--border-color);
      border-radius: 3px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }
    .pagination-controls button.active {
      background-color: var(--primary-color);
      color: white;
    }
    .pagination-controls button:hover:not(.active) {
      background-color: var(--primary-color);
      opacity: 0.7;
      color: white;
    }
    @media (max-width: 768px) {
      .table-controls {
        flex-direction: column;
        align-items: flex-start;
        gap: 15px;
      }
      .search-input {
        width: 100%;
      }
      .pagination-container {
        flex-direction: column;
        gap: 10px;
        align-items: flex-start;
      }
    }
    /* Add margin to separate publication sections */
    .publication-section {
      margin-bottom: 50px;
    }
  </style>
    <!-- Main Content -->
    <div class="main-wrapper">
      <div class="container">
        <div class="page-title">
          <h1>Publications</h1>
          <p class="subtitle">
            Research papers, conference proceedings, books and book chapters
          </p>
        </div>

        <div class="profile-links">
          <a href="#" target="_blank"
            ><i class="fab fa-researchgate"></i> ResearchGate</a
          >
          <a href="#" target="_blank"
            ><i class="fab fa-google"></i> Google Scholar</a
          >
        </div>
        
         <!-- Publication Summary -->
<div class="publication-summary">
  <div class="summary-card">
    <div class="summary-number"><%= Object.keys(publicationsByYear).reduce((sum, year) => sum + publicationsByYear[year].length, 0) %></div>
    <div class="summary-title">Journal Publications</div>
  </div>
  <div class="summary-card">
    <div class="summary-number"><%= Object.keys(conferencesByYear).reduce((sum, year) => sum + conferencesByYear[year].length, 0) %></div>
    <div class="summary-title">Conference Proceedings</div>
  </div>
  <div class="summary-card">
    <div class="summary-number"><%= Object.keys(booksByYear).reduce((sum, year) => sum + booksByYear[year].length, 0) %></div>
    <div class="summary-title">Books</div>
  </div>
  <div class="summary-card">
    <div class="summary-number"><%= Object.keys(chaptersByYear).reduce((sum, year) => sum + chaptersByYear[year].length, 0) %></div>
    <div class="summary-title">Book Chapters</div>
  </div>
</div>

 
 <!-- Journal Publications -->
<div class="publication-section">
  <div class="section-title">
    <h2>Journal Publications</h2>
  </div>

  <!-- Search and Display Controls -->
  <div class="table-controls">
    <div class="entries-selector">
      <label for="entries-select-journals">Show</label>
      <select id="entries-select-journals" class="entries-select">
        <option value="5">5</option>
        <option value="10">10</option>
        <option value="25">25</option>
        <option value="50">50</option>
        <option value="100">100</option>
      </select>
      <span>entries</span>
    </div>
    <div class="search-container">
      <input type="text" id="publication-search-journals" placeholder="Search publications..." class="search-input">
      <button id="search-btn-journals" class="search-button">
        <i class="fas fa-search"></i>
      </button>
    </div>
  </div>

  <div class="table-wrapper">
    <table class="publication-table" id="publications-table">
      <thead>
        <tr>
          <th>Author</th>
          <th>Paper Title</th>
          <th>Journal Title</th>
          <th>Year</th>
          <th>Volume/Pages</th>
          <th>Publication Link</th>
          <th>Impact Factor</th>
        </tr>
      </thead>
      <tbody id="publications-body">
        <% publications.forEach((pub, index) => { %>
          <tr class="publication-row" data-index="<%= index %>">
          <td><%= pub.author %></td>
          <td><%= pub.title %></td>
          <td><%= pub.journal %></td>
          <td><%= pub.year %></td>
          <td><%= pub.volumePages %></td>
          <td>
            <% if (pub.publicationLink && pub.publicationLink !== '#') { %>
            <a href="<%= pub.publicationLink %>" target="_blank">DOI</a>
            <% } else { %> <%= pub.publicationDate %> <% } %>
          </td>
          <td>
            <span class="impact-factor"><%= pub.impactFactor %></span>
          </td>
        </tr>
        <% }) %>
      </tbody>
    </table>
  </div>

  <!-- Pagination -->
  <div class="pagination-container">
    <div class="pagination-info">
      Showing <span id="showing-start-journals">1</span> to <span id="showing-end-journals">10</span> of <span id="total-entries-journals"><%= publications.length %></span> entries
    </div>
    <div class="pagination-controls" id="pagination-controls-journals">
      <!-- Pagination buttons will be dynamically generated -->
    </div>
  </div>
</div>

       <!-- Conference Proceedings -->
<div class="publication-section">
  <div class="section-title">
    <h2>Conference Proceedings</h2>
  </div>

  <!-- Search and Display Controls -->
  <div class="table-controls">
    <div class="entries-selector">
      <label for="entries-select-conferences">Show</label>
      <select id="entries-select-conferences" class="entries-select">
        <option value="5">5</option>
        <option value="10">10</option>
        <option value="25">25</option>
        <option value="50">50</option>
        <option value="100">100</option>
      </select>
      <span>entries</span>
    </div>
    <div class="search-container">
      <input type="text" id="publication-search-conferences" placeholder="Search conferences..." class="search-input">
      <button id="search-btn-conferences" class="search-button">
        <i class="fas fa-search"></i>
      </button>
    </div>
  </div>

  <div class="table-wrapper">
    <table class="publication-table conference-table" id="conferences-table">
      <thead>
        <tr>
          <th>Author</th>
          <th>Proceeding/Presentation Title</th>
          <th>Conference/Journal Title</th>
          <th>Date</th>
          <th>Year</th>
          <th>Place</th>
        </tr>
      </thead>
      <tbody id="conferences-body">
        <% conferences.forEach((conf, index) => { %>
        <tr class="conference-row" data-index="<%= index %>" >
          <td><%= conf.author %></td>
          <td><%= conf.title %></td>
          <td><%= conf.conference %></td>
          <td><%= conf.date %></td>
          <td><%= conf.year %></td>
          <td><%= conf.place %></td>
        </tr>
        <% }) %>
      </tbody>
    </table>
  </div>

  <!-- Pagination -->
  <div class="pagination-container">
    <div class="pagination-info">
      Showing <span id="showing-start-conferences">1</span> to <span id="showing-end-conferences">5</span> of <span id="total-entries-conferences"><%= conferences.length %></span> entries
    </div>
    <div class="pagination-controls" id="pagination-controls-conferences">
      <!-- Pagination buttons will be dynamically generated -->
    </div>
  </div>
</div>

     <!-- Books -->
<div class="publication-section mt-5">
  <div class="section-title">
    <h2>Books</h2>
  </div>
<!-- Search and Display Controls for Books -->
<div class="table-controls">
  <div class="entries-selector">
    <label for="entries-select-books">Show</label>
    <select id="entries-select-books" class="entries-select">
      <option value="5">5</option>
      <option value="10">10</option>
      <option value="25">25</option>
      <option value="50">50</option>
      <option value="100">100</option>
    </select>
    <span>entries</span>
  </div>
  <div class="search-container">
    <input type="text" id="publication-search-books" placeholder="Search books..." class="search-input">
    <button id="search-btn-books" class="search-button">
      <i class="fas fa-search"></i>
    </button>
  </div>
</div>

<div class="table-wrapper">
  <table class="publication-table books-table" id="books-table">
    <thead>
      <tr>
        <th>Author</th>
        <th>Name</th>
        <th>Year</th>
        <th>ISBN</th>
        <th>Photo</th>
      </tr>
    </thead>
    <tbody id="books-body">
      <% books.forEach((book, index) => { %>
      <tr class="book-row" data-index="<%= index %>">
        <td><%= book.author %></td>
        <td><%= book.title %></td>
        <td><%= book.year %></td>
        <td><%= book.isbn %></td>
        <td>
          <% if (book.photo) { %>
            <img src="<%= book.photo %>" alt="Cover of <%= book.title %>" style="width: 50px; height:auto;" />
          <% } else { %>
            No Image
          <% } %>
        </td>
      </tr>
      <% }) %>
    </tbody>
  </table>
</div>

<!-- Pagination for Books -->
<div class="pagination-container">
  <div class="pagination-info">
    Showing <span id="showing-start-books">1</span> to <span id="showing-end-books">5</span> of <span id="total-entries-books"><%= books.length %></span> entries
  </div>
  <div class="pagination-controls" id="pagination-controls-books">
    <!-- Pagination buttons will be dynamically generated -->
  </div>
</div>
</div>



<!-- Chapters -->
<div class="publication-section">
  <div class="section-title">
    <h2>Chapters</h2>
  </div>

  <!-- Search and Display Controls for Chapters -->
  <div class="table-controls">
    <div class="entries-selector">
      <label for="entries-select-chapters">Show</label>
      <select id="entries-select-chapters" class="entries-select">
        <option value="5">5</option>
        <option value="10">10</option>
        <option value="25">25</option>
        <option value="50">50</option>
        <option value="100">100</option>
      </select>
      <span>entries</span>
    </div>
    <div class="search-container">
      <input type="text" id="publication-search-chapters" placeholder="Search chapters..." class="search-input">
      <button id="search-btn-chapters" class="search-button">
        <i class="fas fa-search"></i>
      </button>
    </div>
  </div>

  <div class="table-wrapper">
    <table class="publication-table chapters-table" id="chapters-table">
      <thead>
        <tr>
          <th>Author</th>
          <th>Chapter Name</th>
          <th>Book Name</th>
          <th>Year</th>
          <th>ISBN</th>
          <th>Page No.</th>
        </tr>
      </thead>
      <tbody id="chapters-body">
        <% chapters.forEach((chapter, index) => { %>
        <tr class="chapter-row" data-index="<%= index %>">
          <td><%= chapter.author %></td>
          <td><%= chapter.chapterName %></td>
          <td><%= chapter.bookName %></td>
          <td><%= chapter.year %></td>
          <td><%= chapter.ISBN %></td>
          <td><%= chapter.Page %></td>
        </tr>
        <% }) %>
      </tbody>
    </table>
  </div>

  <!-- Pagination for Chapters -->
  <div class="pagination-container">
    <div class="pagination-info">
      Showing <span id="showing-start-chapters">1</span> to <span id="showing-end-chapters">5</span> of <span id="total-entries-chapters"><%= chapters.length %></span> entries
    </div>
    <div class="pagination-controls" id="pagination-controls-chapters">
      <!-- Pagination buttons will be dynamically generated -->
    </div>
  </div>
</div>

      </div>
    </div>
    <%- include('partials/footer') %>

    <script>

      document.addEventListener('DOMContentLoaded', function() {
  // Initialize pagination and search for each section
  initializeSection('journals', 'publications-body', 'publication-row');
  initializeSection('conferences', 'conferences-body', 'conference-row');
  initializeSection('books', 'books-body', 'book-row');
  initializeSection('chapters', 'chapters-body', 'chapter-row');
  
  // Function to initialize pagination and search for a section
  function initializeSection(sectionId, tbodyId, rowClass) {
    // DOM elements
    const entriesSelect = document.getElementById(`entries-select-${sectionId}`);
    const publicationSearch = document.getElementById(`publication-search-${sectionId}`);
    const searchBtn = document.getElementById(`search-btn-${sectionId}`);
    const tbody = document.getElementById(tbodyId);
    const paginationControls = document.getElementById(`pagination-controls-${sectionId}`);
    const showingStart = document.getElementById(`showing-start-${sectionId}`);
    const showingEnd = document.getElementById(`showing-end-${sectionId}`);
    const totalEntries = document.getElementById(`total-entries-${sectionId}`);
    
    if (!tbody || !paginationControls) return;
    
    // Get all rows
    const allRows = tbody.querySelectorAll(`.${rowClass}`);
    
    // Variables
    let currentPage = 1;
    let entriesPerPage = parseInt(entriesSelect ? entriesSelect.value : 5);
    let filteredRows = [...allRows];
    
    // Initialize pagination
    function initializePagination() {
      updatePagination();
      showPage(currentPage);
    }
    
    // Update pagination based on filtered rows
    function updatePagination() {
      const pageCount = Math.ceil(filteredRows.length / entriesPerPage);
      paginationControls.innerHTML = '';
      
      // Previous button
      const prevBtn = document.createElement('button');
      prevBtn.innerHTML = '&laquo;';
      prevBtn.addEventListener('click', () => {
        if (currentPage > 1) {
          currentPage--;
          showPage(currentPage);
          updatePaginationButtons();
        }
      });
      paginationControls.appendChild(prevBtn);
      
      // Page buttons (show max 5 buttons)
      const maxVisibleButtons = 30;
      let startPage = Math.max(1, currentPage - Math.floor(maxVisibleButtons / 2));
      let endPage = Math.min(pageCount, startPage + maxVisibleButtons - 1);
      
      // Adjust start page if we're near the end
      if (endPage - startPage + 1 < maxVisibleButtons) {
        startPage = Math.max(1, endPage - maxVisibleButtons + 1);
      }
      
      for (let i = startPage; i <= endPage; i++) {
        const pageBtn = document.createElement('button');
        pageBtn.textContent = i;
        pageBtn.dataset.page = i;
        pageBtn.addEventListener('click', () => {
          currentPage = parseInt(i);
          showPage(currentPage);
          updatePaginationButtons();
        });
        paginationControls.appendChild(pageBtn);
      }
      
      // Next button
      const nextBtn = document.createElement('button');
      nextBtn.innerHTML = '&raquo;';
      nextBtn.addEventListener('click', () => {
        if (currentPage < pageCount) {
          currentPage++;
          showPage(currentPage);
          updatePaginationButtons();
        }
      });
      paginationControls.appendChild(nextBtn);
      
      updatePaginationButtons();
    }
    
    // Update active button
    function updatePaginationButtons() {
      const buttons = paginationControls.querySelectorAll('button');
      buttons.forEach(button => {
        if (button.dataset.page == currentPage) {
          button.classList.add('active');
        } else {
          button.classList.remove('active');
        }
      });
    }
    
    // Show current page
    function showPage(page) {
      // Hide all rows
      allRows.forEach(row => {
        row.style.display = 'none';
      });
      
      // Show rows for current page
      const start = (page - 1) * entriesPerPage;
      const end = start + entriesPerPage;
      
      filteredRows.forEach((row, index) => {
        if (index >= start && index < end) {
          row.style.display = 'table-row';
        }
      });
      
      // Update info text
      if (showingStart && showingEnd && totalEntries) {
        showingStart.textContent = filteredRows.length ? start + 1 : 0;
        showingEnd.textContent = Math.min(end, filteredRows.length);
        totalEntries.textContent = filteredRows.length;
      }
    }
    
    // Filter rows based on search input
    function filterRows() {
      const searchTerm = publicationSearch.value.toLowerCase();
      filteredRows = [...allRows].filter(row => {
        const text = row.textContent.toLowerCase();
        return text.includes(searchTerm);
      });
      
      currentPage = 1;
      updatePagination();
      showPage(currentPage);
    }
    
    // Event listeners
    if (entriesSelect) {
      entriesSelect.addEventListener('change', function() {
        entriesPerPage = parseInt(this.value);
        currentPage = 1;
        updatePagination();
        showPage(currentPage);
      });
    }
    
    if (searchBtn) {
      searchBtn.addEventListener('click', filterRows);
    }
    
    if (publicationSearch) {
      publicationSearch.addEventListener('keyup', function() {
        filterRows();
      });
    }
    
    // Initialize on page load
    initializePagination();
  }
  
  // Theme toggle functionality (preserving existing code)
  const themeToggle = document.getElementById("theme-toggle");

  // Check for saved theme preference or use default (dark)
  const savedTheme = localStorage.getItem("theme") || "dark";
  document.documentElement.setAttribute("data-theme", savedTheme);

  // Set the toggle position based on the current theme
  themeToggle.checked = savedTheme === "dark";

  // Listen for toggle changes
  themeToggle.addEventListener("change", function (e) {
    if (e.target.checked) {
      document.documentElement.setAttribute("data-theme", "dark");
      localStorage.setItem("theme", "dark");
    } else {
      document.documentElement.setAttribute("data-theme", "light");
      localStorage.setItem("theme", "light");
    }
  });
});
    </script>
